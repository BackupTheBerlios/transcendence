//
// speakmylanguage-script
//
// 
//
// Creator: Artix
// Contact: 
//
// Created: 11-Dec-2001
// Updated: 
//

use uo;
use os;
use util;
use cfgfile;

var errors := {"sqrqx", "blblbh", "hxqh", "qyhsk"};

program speakmylanguage (who)

var translation;
var race := GetObjProperty(who, "race");
if (race == "human")
 race := GetObjProperty(who, "ethno");
endif
var spokenlanguages;
var sillabario := ReadConfigFile("dictionary");
var allkeys := GetConfigStringKeys( sillabario );
print(allkeys);
if (!sillabario)
 SendSysMessage(who, "ERROR");
endif
var languageability;
var firstsyllable;
var secondsyllable;
//local word;
sillabario := FindConfigElem(sillabario, race);
if (!sillabario)
 SendSysMessage(who, "Sorry, that language doesn't exist", 3, 38);
 return;
endif
var syllables := GetConfigString(sillabario, "wordlist");
//print ("file cfg :" + syllables);
syllables := SplitWords(syllables);
//print ("sillabe :" + syllables);
var phrase;
var newphrase;
var probability;
var displayedword;
var displayedphrase := "";
var newword;
var i;
var q;
var rnd;
var myphrase := "";
SendSysMessage(who, "You start speaking " + race + " language ...", 3, 0x005a);

set_critical(1);
while (1)
 if (!who)
  break;
 endif


 phrase :=  RequestInput( who, who.backpack, "" );

 //printTextAbovePrivate( who, phrase, who, 3, 76 );
 phrase := SplitWords(phrase);
 myphrase := "";
 if (phrase[1] == "_exit")
  SendSysMessage(who, "You stop speaking your language.", 3, 38);
  break;
 endif
 if (phrase[1][1] == ".")
  SendSysMessage(who, "Command", 3, 38);
  return;
 endif
 translation := "";
 newphrase := {};
 displayedphrase := "";
 var myability := GetObjProperty(who, "spokenlanguages");
 myability := myability[race];
 if (myability < RandomInt(100))
  phrase.sort();
 endif

   foreach word in phrase
    if (myability < RandomInt(40))
     rnd := RandomInt(len(errors));
      if (rnd == 0)
       rnd := 1;
      elseif (rnd > len(syllables))
       rnd := len(errors);
      endif 
     newword := errors[rnd];
     word := errors[rnd];
     newphrase.append (newword);
    else

    rnd := RandomInt(len(syllables));
    if (rnd == 0)
     rnd := 1;
    elseif (rnd > len(syllables))
     rnd := len(syllables);
    endif 
    firstsyllable := syllables[rnd];
    //print ("first " + firstsyllable);
    rnd := RandomInt(len(syllables));
    if (rnd == 0)
     rnd := 1;
    elseif (rnd > len(syllables))
     rnd := len(syllables);
    endif
    secondsyllable := syllables[rnd];
    word := word;
    //print ("second " + secondsyllable);
    newword := firstsyllable + secondsyllable;
    newphrase.append (newword);
    //print (newphrase);
   endif
   endforeach
  
   foreach char in ListMobilesNearLocation( who.x, who.y, who.z, 14, who.realm )
     if (char.isA(POLCLASS_NPC))
      continue;
     endif
    
     displayedphrase := "";
     spokenlanguages := GetObjProperty(char, "spokenlanguages");
     //print ("name:_" + who.name + "race: " + race);
     languageability := spokenlanguages[race];
     //print ("name: " + char.name + "lang ability: " + cstr (languageability)); 
      if (len(phrase) > 0)
      for (i := 1; i <= len(phrase); i := i + 1)
        probability := RandomInt(99);
        if (languageability < probability)
          displayedword := newphrase[i];
        else
          displayedword := phrase[i];
        endif
       displayedphrase := displayedphrase + displayedword + " ";
      endfor
     endif
     if (char.serial != who.serial)
      PrintTextAbovePrivate( who, displayedphrase, char, 3, 38 );
     endif
    endforeach
if (len(phrase) > 0)
      for (i := 1; i <= len(phrase); i := i + 1)
        //probability := randomint (99);
        /*if (languageability < probability)
          displayedword := newphrase[i];
        else
          displayedword := phrase[i];
        endif*/
       myphrase := myphrase + phrase[i] + " ";
      endfor
     endif
PrintTextAbovePrivate( who, myphrase, who, 3, 38 );
endwhile
   
endprogram


