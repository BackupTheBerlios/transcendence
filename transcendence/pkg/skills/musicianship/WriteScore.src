// by ArT-iX 11/05/2004
use uo;
use os;

include "notes";
include ":Localization:localization";

const MODE_SINGLENOTE := 0;
const MODE_POLYPHONIC := 1;

program WriteScoreMusic(parms)

 var who := parms[1];
 var item := parms[2];
 var livecomposition := parms[3];
 
 var writemode := MODE_SINGLENOTE;
 
 SendCustomSysMessageByLanguage( who,  GetUserPreferredLanguage(who), "Select a musical score", "Scegli uno spartito", 90, 3);
 var score := target(who);
  if(!score)
  SendLocalizedSysMessage(who, 1, GetUserPreferredLanguage(who), 0, 38, 3);
  return;
 endif
 
 if(!((score.graphic >= 0x0ebd) && (score.graphic <= 0x0ec0)))
  SendLocalizedSysMessage(who, 5, GetUserPreferredLanguage(who), {{"a score"}, {"uno spartito"}}, 38, 3);
  return 0;
 endif
 
 var playgump;
 var musicstream := {};
 
 //var instrumentnotes;
 /*
 case(item.graphic)
  0x0eb1: instrumentnotes := 
  0x0eb2:
  0x0eb3:
 endcase
*/


if(GetObjProperty(score, "Music"))
  SendCustomSysMessageByLanguage( who,  GetUserPreferredLanguage(who), "The score is already written", "Lo spartito e' gia' scritto", 38, 3);
  
  if(GetObjProperty(score, "LiveComposition"))
   SetObjProperty(score, "Music", TranslateLiveScore(score));
   EraseObjProperty(score, "LiveComposition");
  endif  
  
  livecomposition := 0; 
  //return 0;
endif

var lastpos := 0;

if(livecomposition)
 SetObjProperty(score, "LiveComposition", 1);	
else
 if(!GetObjProperty(score, "Music"))
  var emptymus, q;
  emptymus := {};
  for(q := 1; q <= 24; q := q + 1)
   emptymus.append({"pause", 0, 250});
  endfor
  SetObjProperty(score, "Music", emptymus);
 endif	 
endif

while(who)
 if(!livecomposition)
  playgump := GetPlayInstrumentGump(item, livecomposition, score, writemode, (lastpos - 300));
 else
  playgump := GetPlayInstrumentGump(item, livecomposition, score, writemode);
 endif	
 
 var res := SendDialogGump( who, playgump.layout, playgump.data );
 if(res[0] == 1000)
  
  if(livecomposition)
   musicstream[musicstream.size()][3] := 0;
   SetObjProperty(score, "Music", musicstream);
  endif
  
  SetObjProperty(score, "Author", who.name);
  var musicname := RequestInput( who, score, "Composition Name:" );
  SetObjProperty(score, "Name", musicname);
  break;
 else
  if((res[0] >= 300) && (res[0] <= 400)) 
   PlayNote(who, item, score, res[0] - 300);
   lastpos := res[0];
  elseif(res[0] == 401)
   EraseNote(score, lastpos - 300);
  elseif(res[0] == 402)
   if(writemode > 0)
    writemode := 0;
   else
    writemode := 1;
   endif  
  elseif(res[0] == 403)
   start_script("PlayScore", {who, item, score}); 
  else	
  musicstream := PlayNoteAndWriteScore(who, item, score, res[0], musicstream, livecomposition, lastpos - 300, writemode);	 
  endif
 endif
endwhile

endprogram

function GetPlayInstrumentGump(instrument, live, score, mode, selectedpos := 0)

var modestring;
if(mode == 0)
 modestring := "Mode: Single Note";
else
 modestring := "Mode: Polyphonic";
endif	 

var gump := struct;
gump.+layout := 
{
"page 0", 
"resizepic 10 30 83 500 280",
"checkertrans 18 38 485 265", 
"tilepic 165 42 " + cstr(instrument.graphic), 
"text 240 48 1153 0", 

"page 1",
"button  55 168 11374 11374 1 1 1", //do
"button  75 168 11374 11374 1 1 3",//re
"button  70 163 9272 9272 1 1 2",//do#
"button  70 173 9272 9272 1 1 2",

"button  95 168 11374 11374 1 1 5",//mi
"button  115 168 11374 11374 1 1 6",//fa
"button  90 163 9272 9272 1 1 4",//re#
"button  90 173 9272 9272 1 1 4",

"button  135 168 11374 11374 1 1 8",//sol
"button  155 168 11374 11374 1 1 10", //la
"button  130 163 9272 9272 1 1 7",//fa#
"button  130 173 9272 9272 1 1 7",
"button  150 163 9272 9272 1 1 9",//sol#
"button  150 173 9272 9272 1 1 9",
"button  175 168 11374 11374 1 1 12",//si
"button  170 163 9272 9272 1 1 11",//la#
"button  170 173 9272 9272 1 1 11",

// Octave 2
"button  195 168 11374 11374 1 1 101", //do
"button  215 168 11374 11374 1 1 103",//re
"button  210 163 9272 9272 1 1 102",//do#
"button  210 173 9272 9272 1 1 102",

"button  235 168 11374 11374 1 1 105",//mi
"button  255 168 11374 11374 1 1 106",//fa
"button  230 163 9272 9272 1 1 104",//re#
"button  230 173 9272 9272 1 1 104",

"button  275 168 11374 11374 1 1 108",//sol
"button  295 168 11374 11374 1 1 110", //la
"button  270 163 9272 9272 1 1 107",//fa#
"button  270 173 9272 9272 1 1 107",
"button  290 163 9272 9272 1 1 109",//sol#
"button  290 173 9272 9272 1 1 109",
"button  315 168 11374 11374 1 1 112",//si
"button  310 163 9272 9272 1 1 111",//la#


"button  310 173 9272 9272 1 1 111",

"button  420 240 10850 10850 1 0 1000"


};

gump.+data :=
{instrument.desc,
"Octave 1",
"Octave 2",
"Do",
"Do#",
"Re",
"Re#",
"Mi",
"Fa",
"Fa#",
"Sol",
"Sol#",
"La",
"La#",
"Si", 
"",
"",
"Playback"
};

if(!live)
 var score_str;
 var button_graph;
 var i;
 var music := GetObjProperty(score, "Music");
 print(music);
 var lastnote;
 print("LASTPOS: " + cstr(selectedpos));
 if(selectedpos > 0)
  lastnote := cstr(music[selectedpos][1]);
 else
  lastnote := "";
 endif	
 gump.data[16] := "Note: " + lastnote;
 gump.data[17] := modestring;
 gump.layout.append("button  30 240 22118 22119 1 1 401");
 gump.layout.append("text 350 168 1153 15");// + cstr(gump.data.size() - 1));
 gump.layout.append("button  30 60 11401 11402 1 1 402"); //mode switch
 gump.layout.append("text  50 60 1153 16"); //mode switch
 gump.layout.append("button  60 240 11401 11402 1 1 403"); //mode switch
 gump.layout.append("text  80 240 1153 17"); //mode switch
 for(i := 1; i <= 24; i := i + 1)
  //if(selectedpos)
   
   if(selectedpos == i)
    button_graph := 10741;
   else
    if((music[i][1] == "pause") || (music[i][1] == ""))
     button_graph := 10740;
    else
     button_graph := 10742;
    endif
   endif
  //endif
  score_str := "button " + cstr((i * 14) + 30) + " 210 " + cstr(button_graph) + " " + cstr(button_graph) + " 1 1 " + cstr(300 + i) ;
  gump.layout.append(score_str);
 endfor
endif

return gump;

endfunction

function PlayNoteAndWriteScore(who, instrument, score, note, music, live, lastpos, mode)
 
 var time := ReadGameClock();
 var stringnote;
 var oct := 0;
 var previousnote;
 
 
 
 if(note > 99)
  note := note - 100;
  oct := 1;
 endif
 
 case(note)
  1: stringnote := "do"; 
  2: stringnote := "do#"; 
  3: stringnote := "re"; 
  4: stringnote := "re#"; 
  5: stringnote := "mi"; 
  6: stringnote := "fa"; 
  7: stringnote := "fa#"; 
  8: stringnote := "sol"; 
  9: stringnote := "sol#"; 
  10: stringnote := "la"; 
  11: stringnote := "la#"; 
  12: stringnote := "si"; 
 endcase

 case(instrument.graphic)
  0x0eb1: PlaysoundEffect(who, GetStandHarpNote(stringnote, oct));
  0x0eb2: PlaysoundEffect(who, GetLapHarpNote(stringnote, oct));
  0x0eb3: PlaysoundEffect(who, GetLuteNote(stringnote, oct));
 endcase 
 
 if(live)
   music.append({stringnote, oct, time}); 
   if(music.size() > 1)
    music[music.size() - 1][3] := time - music[music.size() - 1][3];
   endif 
   
 else
   if(mode == MODE_SINGLENOTE)
    music := GetObjProperty(score, "Music");
    music[lastpos] := {stringnote, oct, 250};
    SetObjProperty(score, "Music", music);
   else
    WritePolyphonic(who, instrument, score, stringnote, oct, lastpos);	
   endif	 
 endif	
 
 return music;
 
endfunction

function TranslateLiveScore(score)
 var mus := GetObjProperty(score, "Music");
 var newmus := {};
 var i, time, pausednotes;
 foreach pos in mus
  newmus.append({pos[1],pos[2], 250});
  time := pos[3];
  if(time < 100)
   time := time * 1000;
  endif 
  pausednotes := time / 250;
  for(i := 1; i <= (pausednotes - 1); i := i + 1)
   newmus.append({"pause", 0, 250});
  endfor;
 endforeach
 if(mus.size() < 24)
  for(i := 1;  i <= (24 - mus.size()); i := i + 1)
   newmus.append({"pause", 0, 250});
  endfor 
 endif
 return newmus;
endfunction

function EraseNote(score, pos)
 var mus := GetObjProperty(score, "Music");
 if(mus)
  mus[pos][1] := "pause";
  SetObjProperty(score, "Music", mus);
 endif
endfunction


function PlayNote(who, instrument, score, pos)
 

 var oct;
 var previousnote;
 var m := GetObjProperty(score, "Music");
 var note := m[pos][1];
 oct := m[pos][2];

 if(note != "Poly")
 case(instrument.graphic)
  0x0eb1: PlaysoundEffect(who, GetStandHarpNote(note, oct));
  0x0eb2: PlaysoundEffect(who, GetLapHarpNote(note, oct));
  0x0eb3: PlaysoundEffect(who, GetLuteNote(note, oct));
 endcase 
 else
  PlayPolyphonicSound(who, instrument, m[pos][2]);	
 endif	
endfunction 

function WritePolyphonic(who, instrument, score, note, oct, lastpos)
 var music := music := GetObjProperty(score, "Music");
 if(music[lastpos][1] != "Poly")
  var polysound := {"Poly", {{note, oct}}, 250};
  music[lastpos] := polysound;
  SetObjProperty(score, "Music", music);
  case(instrument.graphic)
   0x0eb1: PlaysoundEffect(who, GetStandHarpNote(note, oct));
   0x0eb2: PlaysoundEffect(who, GetLapHarpNote(note, oct));
   0x0eb3: PlaysoundEffect(who, GetLuteNote(note, oct));
  endcase 
 else
  var notes := music[lastpos][2];
  notes.append({note, oct});
  music[lastpos][2] := notes;
  SetObjProperty(score, "Music", music);
  PlayPolyphonicSound(who, instrument, notes);
 endif	
endfunction

function PlayPolyphonicSound(who, instrument, chord)
 foreach note in chord
   case(instrument.graphic)
    0x0eb1: PlaysoundEffect(who, GetStandHarpNote(note[1], note[2]));
    0x0eb2: PlaysoundEffect(who, GetLapHarpNote(note[1], note[2]));
    0x0eb3: PlaysoundEffect(who, GetLuteNote(note[1], note[2]));
   endcase 
 endforeach
endfunction