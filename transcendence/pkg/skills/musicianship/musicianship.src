use uo;
use os;
use util;

include "include/client";
include "include/attributes";
include "include/objtype";
include "include/skillPoints";
include "include/canAccess";
include "notes";
include ":Localization:localization";

var config;


program play(who, item)
  EraseObjProperty(who, "IsMeditating");
  if(Cint(GetObjProperty(who, "LastMusic")) > ReadGameClock())
    SendSysMessage(who, "You must wait a moment before playing again.");
    return;
  endif
  SetObjProperty(who, "LastMusic", Cint(ReadGameClock() + 2));
  if(!can_access(who, item))
    return;
  endif
  var success, fail;
  case(item.graphic)
    0x0eb1:  success := 0x44;  fail := 0x45;
    0x0eb2:  success := 0x46;  fail := 0x47;
    0x0eb3:  success := 0x4d;  fail := 0x4e;
    0x0eb4:  success := 0x4d;  fail := 0x4e;
    0x0e9c:  success := 0x39;  fail := 0x3a;
    0x0e9d:  success := 0x53;  fail := 0x54;
    0x0e9e:  success := 0x53;  fail := 0x54;
  endcase
  var pts := GetEffectiveSkill(who, SKILLID_MUSICIANSHIP) + 10;
  if(pts < 10)
    pts := 10;
  endif
  
var decision := target(who);

if(!decision)
  PlayDefaulMusic(who, success, fail, pts);
else
 if(decision.graphic == item.graphic)	

  var maingump :=  GetMainInstrumentGump(item);
  //var res := SendDialogGump (who, maingump.layout, maingump.data);
  var res;
  SendLocalizedDialogGump(who, GetUserPreferredLanguage(who), maingump.layout, maingump.data, maingump.itadata, res );
  case(res[0])
   801: start_script("WriteScore", {who, item, 1});
   802: start_script("WriteScore", {who, item, 0});
   900: PlayDefaulMusic(who, success, fail, pts);
   901: start_script("PlayManualMusic", {who, item});
   //902: start_script("WriteScore", {who, item});
   903: start_script("PlayScore", {who, item});
   904: TuneInstrument(who, item);
  endcase
  
 elseif((decision.graphic >= 0x0ebd) && (decision.graphic <= 0xec0))
  start_script("PlayScore", {who, item, decision});	
 endif	
endif 
endprogram

function GetMainInstrumentGump(instrument)
var gump := struct;
gump.+layout := 
{
"page 0", 
"resizepic 10 30 83 500 280",
"checkertrans 18 38 485 265", 
"tilepic 165 42 " + cstr(instrument.graphic), 
"text 240 48 1153 0", 
"page 1",
"button 55 123 11401 11402 1 1 900",
"text 75 120 1153 1",
"button 55 143 11401 11402 1 1 901",
"text 75 140 1153 2",
"button 55 163 11401 11402 0 2 902",
"text 75 160 1153 3",
"button 55 183 11401 11402 1 1 903",
"text 75 180 1153 4",
"button 55 203 11401 11402 1 1 904",
"text 75 200 1153 5",
"page 2",
"button 55 143 11401 11402 1 1 801",
"text 75 140 1153 6",
"button 55 183 11401 11402 1 1 802",
"text 75 180 1153 7"
};
gump.+data :=
{instrument.desc,
"Play Standard Music",
"Play Live!", 
"Write Score",
"Play Score",
"Tune Instrument", 
"Live Compose",
"Score Compose"
};
gump.+itadata :=
{instrument.desc,
"Esegui la musica standard",
"Suona dal vivo", 
"Scrivi su spartito",
"Esegui spartito",
"Accorda lo strumento",
"Componi dal vivo",
"Componi sullo spartito"
};

return gump;

endfunction

function GetPlayInstrumentGump(instrument)

var gump := struct;
gump.+layout := 
{
"page 0", 
"resizepic 10 30 83 500 280",
"checkertrans 18 38 485 265", 
"tilepic 165 42 " + cstr(instrument.graphic), 
"text 240 48 1153 0", 
"page 1",
"button  55 168 11374 11374 1 1 1", //do
"button  75 168 11374 11374 1 1 3",//re
"button  70 163 9272 9272 1 1 2",//do#
"button  70 173 9272 9272 1 1 2",

"button  95 168 11374 11374 1 1 5",//mi
"button  115 168 11374 11374 1 1 6",//fa
"button  90 163 9272 9272 1 1 4",//re#
"button  90 173 9272 9272 1 1 4",

"button  135 168 11374 11374 1 1 8",//sol
"button  155 168 11374 11374 1 1 10", //la
"button  130 163 9272 9272 1 1 7",//fa#
"button  130 173 9272 9272 1 1 7",
"button  150 163 9272 9272 1 1 9",//sol#
"button  150 173 9272 9272 1 1 9",
"button  175 168 11374 11374 1 1 12",//si
"button  170 163 9272 9272 1 1 11",//la#
"button  170 173 9272 9272 1 1 11",

// Octave 2
"button  195 168 11374 11374 1 1 101", //do
"button  215 168 11374 11374 1 1 103",//re
"button  210 163 9272 9272 1 1 102",//do#
"button  210 173 9272 9272 1 1 102",

"button  235 168 11374 11374 1 1 105",//mi
"button  255 168 11374 11374 1 1 106",//fa
"button  230 163 9272 9272 1 1 104",//re#
"button  230 173 9272 9272 1 1 104",

"button  275 168 11374 11374 1 1 108",//sol
"button  295 168 11374 11374 1 1 110", //la
"button  270 163 9272 9272 1 1 107",//fa#
"button  270 173 9272 9272 1 1 107",
"button  290 163 9272 9272 1 1 109",//sol#
"button  290 173 9272 9272 1 1 109",
"button  315 168 11374 11374 1 1 112",//si
"button  310 163 9272 9272 1 1 111",//la#
"button  310 173 9272 9272 1 1 111",
"button  400 220 10850 10850 1 0 1000"
};

gump.+data :=
{instrument.desc,
"Octave 1",
"Octave 2",
"Do",
"Do#",
"Re",
"Re#",
"Mi",
"Fa",
"Fa#",
"Sol",
"Sol#",
"La",
"La#",
"Si"
};

return gump;

endfunction

function PlayDefaulMusic(who, success, fail, pts)
if(CheckSkill(who,SKILLID_MUSICIANSHIP, -1, pts))
    PlaySoundEffect(who, success);
  else
    PlaySoundEffect(who, fail);
  endif
endfunction  

function TuneInstrument(who, instrument)
 
 var tuned := GetObjProperty(instrument, "Tuned");
 SendCustomSysMessageByLanguage( who,  GetUserPreferredLanguage(who), "You're tuning the instrument...", "Stai accordando lo strumento...", 90, 3);
 sleep(3);
 if(GetEffectiveSkill(who, SKILLID_MUSICIANSHIP) >= (90 - tuned) )
  SendCustomSysMessageByLanguage( who,  GetUserPreferredLanguage(who), "You tuned the instrument", "Hai accordato lo strumento", 90, 3);
  SetObjProperty(instrument, "Tuned", 100);
 endif

endfunction

