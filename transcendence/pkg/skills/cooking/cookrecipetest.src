//
// Cook Recipes Script
//
// It cooks recipes of the book using pans, pots, pans, cauldrons etc.
//
// Creator: Artix
// Contact: artix@artix.f2s.com
//
// Created: 03-Nov-2001
// Updated: 
//


use uo;
use os;
use cfgfile;

include "pages";
include "include/attributes";

program do_recipe (who, recipe)

//local who := parms[1];
//local recipe := parms[2];
var cfg := ReadConfigFile("recipes");
var elem := cfg[recipe.objtype];
var name := GetConfigString(elem, "name");
print(name);
var id := GetConfigInt(elem, "id");
print(CStr(id));
var ingredients := GetConfigString(elem, "ingredients");
ingredients := SplitWords(ingredients);
print(CStr(ingredients));
var amounts := GetConfigString(elem, "amounts");
amounts := SplitWords(amounts);
print(CStr(amounts));
var requires := GetConfigString(elem, "requires");
requires := SplitWords(requires);
var time := GetConfigInt(elem, "time");
var skill := GetConfigInt(elem, "skill");
var points := GetConfigInt(elem, "points");
var product := GetConfigInt(elem, "product");
var kindlamt := CInt(time / 6);

var gmp := getgumpdata(id);
var layout := gmp[1];
var data := gmp[2];
var quality;
var select := SendDialogGump(who, layout, data);

if (select[0] == 101)

 SendSysMessage(who, "Select the container where you want to cook recipe", 0x003, 0x005a);

 var pan := Target(who);
 if (Distance(who, pan) > 3 )
  SendSysMessage(who, "That's too far away!");
  return;
 endif

 var checkpan := 0;

 var r;
 for (r := 1; r <= len(requires); r := r + 1)
  if (pan.objtype == CInt(requires[r]))
  checkpan := checkpan + 1;
  endif 
 endfor
 print("checkpan : " + CStr(checkpan));
 if (checkpan == 0)
  SendSysMessage(who, "Sorry, wrong item to cook the recipe!", 0x003, 0x005a);
  return;
 endif

 SendSysMessage(who, "Select " + CStr(kindlamt) + " kindlings to make fire", 0x003, 0x005a);
 var kindlings := Target(who);

 if (!kindlings)
  SendSysMessage(who, "Cancelled");
  return;
 endif

 if ((kindlings.objtype != 0x0de1) && (kindlings.objtype != 0x0de2))
  SendSysMessage(who, "Those are not kindlings", 0x003, 0x0028);
  return;
 elseif (kindlings.amount < kindlamt)
  SendSysMessage(who, "Not enough kindlings", 0x003, 0x0028);
  return;
 endif
 

 var amt;
 //local check := 0;
 var ingredientitems := {};
 print("length : " + CStr(len(ingredients)));
 print("ingr 1 : " + CStr(ingredients[1]));
  print("ingr 2 : " + CStr(ingredients[2]));
 var i;
 foreach it in EnumerateItemsInContainer( pan )
  print(CStr(it.objtype));
  for (i := 1; i <= len(ingredients); i := i + 1)
   print(CStr(CInt(ingredients[i])));
   if (it.objtype == CInt(ingredients[i])) //and (it.amount >= cint(amounts[i])))
    
     if (!ingredientitems[i])
      ingredientitems[i] := it;
     elseif (ingredientitems[i].objtype == it.objtype)
      if (ingredientitems[i].amount < CInt(amounts[i]))
       amt := CInt(amounts[i]) - ingredientitems[i].amount;
       SubtractAmount(it, amt);
       AddAmount(ingredientitems[i], amt);
       MoveItemToContainer( it, who.backpack, -1, -1 );
       SendSysMessage(who, "You don't need more of that ingredient!", 0x0003, 0x005a);
      elseif (ingredientitems[i].amount >= CInt(amounts[i]))
      	MoveItemToContainer( it, who.backpack, -1, -1 );
        SendSysMessage(who, "You don't need more of that ingredient!", 0x0003, 0x005a);
      endif
     endif
   //else
    //SendSysMessage (who, "Take out non-useful ingredients!", 0x003, 0x0028);
    //return;
   
   endif
  endfor
 endforeach
print(CStr(ingredientitems));

 var checkingredients;
 var checkamount;
 var k;
 for (k := 1; k <= len(ingredientitems); k := k + 1)
   print("amount1 : " + CStr(ingredientitems[k].amount));
   print("amount2 : " + CStr(amounts[k]));
  
   if (ingredientitems[k].objtype == CInt(ingredients[k]))
    checkingredients := 1;
   else
    checkingredients := 0;
   endif
   if (ingredientitems[k].amount == CInt(amounts[k]))
    checkamount := 1;
   else
    checkamount := 0;
   endif
 endfor

 if ((checkingredients == 0) || (len(ingredientitems) != len(ingredients)))
  SendSysMessage(who, "Sorry, wrong ingredients!", 0x003, 0x0028);
  return;
 endif

 if (checkamount ==  0)
  SendSysMessage(who, "Sorry, wrong doses!", 0x003, 0x0028);
  return;
 endif
   
var qualities := {};
var checkqual;
var q;
SendSysMessage(who, "You start to cook the recipe, it will take " + CStr(time) + " seconds", 0x003, 0x005a);
SubtractAmount(kindlings, kindlamt);
MoveItemToLocation( pan, pan.x, pan.y, pan.z + 1, MOVEITEM_FORCELOCATION );           
var fire := CreateItemAtLocation( pan.x, pan.y, pan.z - 1, 0x0de3, 1, pan.realm );
sleep(time);

 for (q := 1; q <= len(ingredientitems); q := q + 1)
   checkqual := GetObjProperty(ingredientitems[q], "quality");
    if (checkqual)
      qualities[q] := checkqual;
    endif
   SubtractAmount(ingredientitems[q], CInt(amounts[q]));
endfor
DestroyItem(fire);
MoveItemToLocation( pan, pan.x, pan.y, pan.z - 1, MOVEITEM_FORCELOCATION ); 

var success := CheckSkill(who, 13, skill, points);
 if (success)
  quality := GetMedia(qualities);
  var myskill := CInt(GetEffectiveSkill(who, 13));
 
  var food :=  CreateItemInContainer( pan, product, 1 );  
  if (myskill < skill)
   quality := CDbl(myskill / CDbl(skill));
   quality := CInt(quality * 100);
  endif
 
  SetObjProperty(food, "quality", quality); 
 else
  SendSysMessage(who, "You burned it!", 0x003, 0x005a);
  return;
 endif
endif
/*print ("check : " + cstr(check));
if (check >= 2)
 sendsysmessage (who, "Now select 10 kindlings", 0x003, 0x005a);
 local kindlings := target (who);
 if ((kindlings.objtype != 0x0de1) and (kindlings.objtype != 0x0de2))
  sendsysmessage (who, "Wrong object!", 0x003, 0x0028);
  return;
 endif
 if (kindlings.amount < 10)
   sendsysmessage (who, "Not enough kindlings!", 0x003, 0x0028);
   return;
 endif  

 subtractamount (kindlings, 10);
 sendsysmessage (who, "You start to frie the eggs", 0x003, 0x005a);
 local fire := CreateItemAtLocation( pan.x, pan.y, pan.z - 1, 0x0de3, 1 );
 local fire := CreateItemAtLocation( pan.x, pan.y, pan.z - 1, 0x0de3, 1 ); 
 sleep (25);
 CreateItemInContainer( pan, 0x09b6, 1 );   
 destroyitem (fire);
  MoveItemToLocation( pan, pan.x, pan.y, pan.z - 1, MOVEITEM_FORCELOCATION );            
   SendSysMessage (who, "Your fried eggs are ready!", 0x003, 0x005a);
 else 
  sendsysmessage (who, "You have not enough ingredients", 0x003, 0x0028);	
  return;
 endif
endif*/

endprogram


function GetMedia(thearray)

var i;
var sum;
for (i := 1; i < len(thearray); i := i + 1)
 if (i == 1)
  sum := thearray[1];
 endif
 sum := sum + thearray[i + 1];
endfor
var result := CInt(sum / len(thearray));




/*local  somma := thearray[1] + thearray[2] + thearray[3] + thearray[4] + thearray[5] + thearray [6] + thearray[7] + thearray[8] + thearray[9] + thearray[10];
local result := cint (somma / 10);*/
return result;
endfunction 
                            