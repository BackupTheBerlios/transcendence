use uo;
use cfgfile;
use polsys;

include "include/spellRestrictions";
include "include/attributes";
include "include/particles";
include "include/effects2D";
include "checkeffects";
include "include/AOSPackets";

var spellscfg := ReadConfigFile(":spells:spells"); 

program cast_fireball(parms)
  var circle := 3;
  var delivery := "direct";
  var noto := "harmful";
  var result := maincast(parms, delivery, circle, noto, 18);
  if(result == 0)
    return;
  endif
  var caster := result[1];
  var cast_on := result[2];
  CheckForSpell3DEffects(spellscfg, caster, cast_on, 18, FX_FIREBALL );
  Play2DMovingEffectHuefx( caster, cast_on, FX_FIREBALL, 5, 1);
  
  //PlayMovingEffect(caster, cast_on, FX_FIREBALL, 5, 1);
  PlaySoundEffect(caster, 0x15f);
  var dmg := RandomDiceRoll("3d6");
  SetObjProperty(cast_on, "LastHit", {caster.name, caster.serial, "fireball"});
  if(Reflected(cast_on))
     CheckForSpell3DEffects(spellscfg, caster, cast_on, 18, FX_FIREBALL );
     Play2DMovingEffectHuefx( caster, cast_on, FX_FIREBALL, 5, 1);
    //PlayMovingEffect(cast_on, caster, FX_FIREBALL, 5, 1);
    PlaySoundEffect(cast_on, 0x15f);
    cast_on := caster;
  endif
  if(GetHp(cast_on) > 1)
    if(cast_on.npctemplate)
      dmg := dmg * 2;
    endif
    if(!caster.npctemplate)
     SendVisualHPloss(caster, cast_on, dmg);
    endif
    ApplyRawDamage(cast_on, Resisted(circle,caster,cast_on, dmg));
  endif
endprogram
